function fixCollapse(){$(window).width()>766&&$(".about-collapse").height("auto")}!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t("object"==typeof exports?require("jquery"):jQuery)}(function(t){"use strict";var e,o,n,i="jelect";t[i]={version:"1.0.0",options:{classes:{autocomplete:i+"_type_autocomplete",containerActive:i+"_state_active",containerDisabled:i+"_state_disabled",currentActive:i+"-current_state_active",optionsActive:i+"-options_state_active",optionActive:i+"-option_state_active",optionDisabled:i+"-option_state_disabled",optionHide:i+"-option_state_hide"},plugins:[]},plugins:{},selectors:{container:".js-"+i,scroller:".js-"+i+"-scroller",input:".js-"+i+"-input",current:".js-"+i+"-current",options:".js-"+i+"-options",option:".js-"+i+"-option",optionValue:".js-"+i+"-option-value"},keyCode:{TAB:9,BACKSPACE:8,ENTER:13,ESC:27,DOWN:40,UP:38,HOME:36,END:35,PAGE_UP:33,PAGE_DOWN:34}},o=function(e){var o=this,n=t[i],r=n.selectors,s=n.options.classes,a=o.$jelectOptions.find(r.option+'[data-val="'+e+'"]'),l=a.find(r.optionValue).text();return a.hasClass(s.optionDisabled)?(console.error("Option {"+e+"} is disabled"),!1):(a.addClass(s.optionActive).siblings(r.option).removeClass(s.optionActive),o.$jelect.val(e).removeClass(s.containerActive).trigger("jelect.change"),o.autocomplete?o.$jelectCurrent.val(e):(o.$jelectCurrent.text(l).attr("data-val",e),o.$jelectInput.val(e).attr("value",e).trigger("change")),void o.trigger("change"))},n=function(){var e=this,o=t[i].selectors,n=[];return e.$jelectOptions.find(o.option).each(function(e,o){var i=t(o);n.push({index:e,value:i.data("val")})}),n},e=function(e,o){var n=t[i],r=n.selectors,s=n.options.classes,a={$jelect:e,$jelectCurrent:e.find(r.current),$jelectOptions:e.find(r.options),$jelectInput:e.find(r.input),autocomplete:e.hasClass(s.autocomplete),options:t.extend(!0,{},n.options,o||{})};t.extend(!0,this,a),this.init()},e.prototype.init=function(){var e=this,n=t[i],r=n.selectors,s=e.options.classes,a=e.$jelectOptions.find(r.option).not("."+s.optionDisabled).data("val");e.trigger("init"),e.values=e.serialize(),e.$jelect.val(a),e.$jelectCurrent.on("click "+i+".clickCurrent",function(){var o,n=t(r.container).filter("."+s.containerActive).not(e.$jelect),i=t(r.options).filter("."+s.optionsActive).not(e.$jelectOptions),a=e.$jelect.find(r.scroller),l=a.scrollTop(),c=e.$jelect.hasClass(s.containerDisabled),u=!e.$jelect.hasClass(s.containerActive)&&!e.$jelectOptions.hasClass(s.optionsActive);return!c&&(u&&e.trigger("beforeOpen"),n.length&&i.length&&(n.removeClass(s.containerActive),i.removeClass(s.optionsActive)),e.$jelect.toggleClass(s.containerActive),e.$jelectOptions.toggleClass(s.optionsActive),e.$jelect.hasClass(s.containerActive)&&(o=e.$jelectOptions.find("."+s.optionActive),l=a.scrollTop(),a.scrollTop(l+o.position().top)),e.autocomplete&&e.$jelectCurrent.trigger("keyup"),void(u&&(e.$jelectCurrent.trigger("focus"),e.trigger("afterOpen"))))}),e.$jelectOptions.on("click "+i+".changeOption",r.option,function(){var n=t(this),i=n.data("val");return!n.hasClass(s.optionDisabled)&&(o.call(e,i),void e.$jelectOptions.removeClass(s.optionsActive))}),e.autocomplete&&e.$jelectCurrent.on("keyup",function(o){var i=t(this),a=n.keyCode,l=o.keyCode,c=String.fromCharCode(l),u=/[a-zA-Zа-яА-ЯЁё0-9]/,p=i.val(),f=e.$jelectOptions.find(r.option),d=e.$jelect.find(r.scroller),h=t.grep(e.values,function(t){return t.value.indexOf(p)===-1});(u.test(c)||l===a.BACKSPACE)&&(e.$jelect.hasClass(s.containerActive)||e.$jelectCurrent.trigger("click"),f.removeClass(s.optionHide),t.each(h,function(t,e){var o=e.value;f.filter('[data-val="'+o+'"]').addClass(s.optionHide)}),f.filter(":visible").removeClass(s.optionActive).first().addClass(s.optionActive),d.scrollTop(0))})},e.prototype.trigger=function(e){var o=this;t.each(o.options.plugins||[],function(n,r){r=t[i].plugins[r],r&&r[e]&&r[e]({$jelect:o.$jelect,$jelectCurrent:o.$jelectCurrent,$jelectOptions:o.$jelectOptions,$jelectInput:o.$jelectInput,options:o.options,text:o.text(),val:o.val()})})},e.prototype.text=function(){return this.$jelectCurrent.text().trim()},e.prototype.val=function(){return this.$jelect.val()},e.prototype.setValue=function(t){return"undefined"!=typeof t&&o.call(this,t),this},e.prototype.addValue=function(e,o,n){var r=this,s=t[i],a=s.selectors,l=s.options.classes,c=r.$jelectOptions.find(a.option),u=c.length-1,p=null===n||void 0===n?u+1:n,f=null,d=null;p>c.length?p=u+1:p<0&&(p=0),f=0===p?c.first():p>0&&p<=u?c.eq(p):c.last(),d=f.clone(),d.removeClass(l.optionDisabled).removeClass(l.optionActive).removeClass(l.optionHide).attr("data-val",e).find(a.optionValue).html(o.trim()),p<=u?f.before(d):f.after(d),r.values.push({index:r.values.length,value:e})},e.prototype.serialize=function(){return n.call(this)},e.prototype.disable=function(e){var o=this,n=t[i],r=n.selectors,s=n.options.classes,a=o.$jelectOptions.find(r.option+'[data-val="'+e+'"]'),l=!a.hasClass(s.optionDisabled);if("undefined"!=typeof e){if(l&&(a.addClass(s.optionDisabled),o.$jelectCurrent.data("val")===e)){var c=o.$jelectOptions.find(r.option).not("."+s.optionDisabled).first();o.setValue(c.data("val"))}}else o.$jelect.addClass(s.containerDisabled),o.$jelectInput.attr("disabled",!0);return this},e.prototype.enable=function(e){var o=this,n=t[i],r=n.selectors,s=n.options.classes,a=o.$jelectOptions.find(r.option+'[data-val="'+e+'"]'),l=a.hasClass(s.optionDisabled);return"undefined"!=typeof e&&l?l&&(a=o.$jelectOptions.find(r.option+'[data-val="'+e+'"]'),a.removeClass(s.optionDisabled)):(o.$jelect.removeClass(s.containerDisabled),o.$jelectInput.attr("disabled",!1)),this},t(window.document).on("click "+i+".clickOutside",function(e){var o,n,r=t[i],s=r.selectors,a=t(e.target),l=t(s.options);if(!a.is(s.container)&&!a.closest(s.container).length){if(o=l.closest(s.container).data("jelect"),!o)return;n=o.options.classes,l.hasClass(n.optionsActive)&&(l.removeClass(n.optionsActive).closest(s.container).removeClass(n.containerActive),o.trigger("clickOutside"))}}).on("keydown "+i+".keydown",function(e){var n,r,s,a,l,c,u,p,f,d,h,v,g,y,m,b=t(e.target),j=t[i],C=j.keyCode,w=e.keyCode,x=j.selectors;if(b.is(x.current)){switch(n=b.closest(x.container).data(i),r=n.options.classes,d=b.closest(x.container),h=d.find(x.scroller),v=d.find(x.options),l=v.outerHeight(),g=d.find(x.option).not("."+r.optionHide),y=g.filter("."+r.optionActive),c=d.hasClass(r.containerActive),s=h.scrollTop(),w){case C.TAB:d.removeClass(r.containerActive),v.removeClass(r.optionsActive),o.call(n,n.val());break;case C.ENTER:d.hasClass(r.containerActive)?y.trigger(i+".changeOption"):b.trigger("click"),e.preventDefault();break;case C.ESC:if(!c)return;b.trigger("click"),o.call(n,n.val()),e.preventDefault();break;case C.UP:if(e.preventDefault(),!c)return void b.trigger("click");var A=g.first().is(y);y.removeClass(r.optionActive),m=A?g.last():y.prevAll(":visible").not("."+r.optionDisabled).first(),a=m.position().top,a<0?s+=a:a>s+l&&(s=a);break;case C.DOWN:if(e.preventDefault(),!c)return void b.trigger("click");var $=g.last().is(y);y.removeClass(r.optionActive),m=$?g.first():y.nextAll(":visible").not("."+r.optionDisabled).first(),a=m.position().top,a>=l?s+=a:a<0&&(s=a);break;case C.HOME:if(e.preventDefault(),!c)return;if(y.is(g.first()))return;y.removeClass(r.optionActive),m=g.first(),s=m.position().top;break;case C.END:if(e.preventDefault(),!c)return;if(y.is(g.last()))return;y.removeClass(r.optionActive),m=g.last(),s=m.position().top;break;case C.PAGE_UP:if(e.preventDefault(),!c)return;u=Math.round(l/y.outerHeight()),p=Math.ceil((y.index()+1)/u)-1,f=p*u-u-1,y.removeClass(r.optionActive),f<0&&(f=0),m=0===f&&g.eq(f).hasClass(r.optionDisabled)?g.eq(f).nextAll(":visible").not("."+r.optionDisabled).first():g.eq(f),s+=m.position().top;break;case C.PAGE_DOWN:if(e.preventDefault(),!c)return;u=Math.round(l/y.outerHeight()),p=Math.ceil((y.index()+1)/u)+1,f=p*u-u,y.removeClass(r.optionActive),f>g.length&&(f=g.length-1),m=f===g.length-1?g.eq(f):g.eq(f).nextAll(":visible").not("."+r.optionDisabled).first(),s+=m.position().top}m&&(m.addClass(r.optionActive),h.scrollTop(s))}else b.is(x.option)&&(n=b.closest(x.container).data(i),r=n.options.classes,w===C.ENTER&&b.trigger(i+".changeOption"))}),t.fn[i]=function(o){var n=this,r=arguments;if(void 0===o||"object"==typeof o)return n.each(function(n,r){t.data(r,i)||t.data(r,i,new e(t(r),o))});if("string"==typeof o&&"_"!==o[0]&&"init"!==o){var s;return n.each(function(n,a){var l=t.data(a,i);l instanceof e&&"function"==typeof l[o]&&(s=l[o].apply(l,Array.prototype.slice.call(r,1))),"destroy"===o&&t.data(this,i,null)}),void 0!==s?s:n}}}),function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){var e=-1,o=-1,n=function(t){return parseFloat(t)||0},i=function(e){var o=1,i=t(e),r=null,s=[];return i.each(function(){var e=t(this),i=e.offset().top-n(e.css("margin-top")),a=s.length>0?s[s.length-1]:null;null===a?s.push(e):Math.floor(Math.abs(r-i))<=o?s[s.length-1]=a.add(e):s.push(e),r=i}),s},r=function(e){var o={byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof e?t.extend(o,e):("boolean"==typeof e?o.byRow=e:"remove"===e&&(o.remove=!0),o)},s=t.fn.matchHeight=function(e){var o=r(e);if(o.remove){var n=this;return this.css(o.property,""),t.each(s._groups,function(t,e){e.elements=e.elements.not(n)}),this}return this.length<=1&&!o.target?this:(s._groups.push({elements:this,options:o}),s._apply(this,o),this)};s.version="master",s._groups=[],s._throttle=80,s._maintainScroll=!1,s._beforeUpdate=null,s._afterUpdate=null,s._rows=i,s._parse=n,s._parseOptions=r,s._apply=function(e,o){var a=r(o),l=t(e),c=[l],u=t(window).scrollTop(),p=t("html").outerHeight(!0),f=l.parents().filter(":hidden");return f.each(function(){var e=t(this);e.data("style-cache",e.attr("style"))}),f.css("display","block"),a.byRow&&!a.target&&(l.each(function(){var e=t(this),o=e.css("display");"inline-block"!==o&&"flex"!==o&&"inline-flex"!==o&&(o="block"),e.data("style-cache",e.attr("style")),e.css({display:o,"padding-top":"0","padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px",overflow:"hidden"})}),c=i(l),l.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||"")})),t.each(c,function(e,o){var i=t(o),r=0;if(a.target)r=a.target.outerHeight(!1);else{if(a.byRow&&i.length<=1)return void i.css(a.property,"");i.each(function(){var e=t(this),o=e.attr("style"),n=e.css("display");"inline-block"!==n&&"flex"!==n&&"inline-flex"!==n&&(n="block");var i={display:n};i[a.property]="",e.css(i),e.outerHeight(!1)>r&&(r=e.outerHeight(!1)),o?e.attr("style",o):e.css("display","")})}i.each(function(){var e=t(this),o=0;a.target&&e.is(a.target)||("border-box"!==e.css("box-sizing")&&(o+=n(e.css("border-top-width"))+n(e.css("border-bottom-width")),o+=n(e.css("padding-top"))+n(e.css("padding-bottom"))),e.css(a.property,r-o+"px"))})}),f.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||null)}),s._maintainScroll&&t(window).scrollTop(u/p*t("html").outerHeight(!0)),this},s._applyDataApi=function(){var e={};t("[data-match-height], [data-mh]").each(function(){var o=t(this),n=o.attr("data-mh")||o.attr("data-match-height");n in e?e[n]=e[n].add(o):e[n]=o}),t.each(e,function(){this.matchHeight(!0)})};var a=function(e){s._beforeUpdate&&s._beforeUpdate(e,s._groups),t.each(s._groups,function(){s._apply(this.elements,this.options)}),s._afterUpdate&&s._afterUpdate(e,s._groups)};s._update=function(n,i){if(i&&"resize"===i.type){var r=t(window).width();if(r===e)return;e=r}n?o===-1&&(o=setTimeout(function(){a(i),o=-1},s._throttle)):a(i)},t(s._applyDataApi),t(window).bind("load",function(t){s._update(!1,t)}),t(window).bind("resize orientationchange",function(t){s._update(!0,t)})}),!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t;return function e(t,o,n){function i(s,a){if(!o[s]){if(!t[s]){var l="function"==typeof require&&require;if(!a&&l)return l(s,!0);if(r)return r(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=o[s]={exports:{}};t[s][0].call(u.exports,function(e){var o=t[s][1][e];return i(o?o:e)},u,u.exports,e,t,o,n)}return o[s].exports}for(var r="function"==typeof require&&require,s=0;s<n.length;s++)i(n[s]);return i}({1:[function(t,e,o){var n=t("matches-selector");e.exports=function(t,e,o){for(var i=o?t:t.parentNode;i&&i!==document;){if(n(i,e))return i;i=i.parentNode}}},{"matches-selector":5}],2:[function(t,e,o){function n(t,e,o,n,r){var s=i.apply(this,arguments);return t.addEventListener(o,s,r),{destroy:function(){t.removeEventListener(o,s,r)}}}function i(t,e,o,n){return function(o){o.delegateTarget=r(o.target,e,!0),o.delegateTarget&&n.call(t,o)}}var r=t("closest");e.exports=n},{closest:1}],3:[function(t,e,o){o.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},o.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||o.node(t[0]))},o.string=function(t){return"string"==typeof t||t instanceof String},o.fn=function(t){var e=Object.prototype.toString.call(t);return"[object Function]"===e}},{}],4:[function(t,e,o){function n(t,e,o){if(!t&&!e&&!o)throw new Error("Missing required arguments");if(!a.string(e))throw new TypeError("Second argument must be a String");if(!a.fn(o))throw new TypeError("Third argument must be a Function");if(a.node(t))return i(t,e,o);if(a.nodeList(t))return r(t,e,o);if(a.string(t))return s(t,e,o);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function i(t,e,o){return t.addEventListener(e,o),{destroy:function(){t.removeEventListener(e,o)}}}function r(t,e,o){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,o)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,o)})}}}function s(t,e,o){return l(document.body,t,e,o)}var a=t("./is"),l=t("delegate");e.exports=n},{"./is":3,delegate:2}],5:[function(t,e,o){function n(t,e){if(r)return r.call(t,e);for(var o=t.parentNode.querySelectorAll(e),n=0;n<o.length;++n)if(o[n]==t)return!0;return!1}var i=Element.prototype,r=i.matchesSelector||i.webkitMatchesSelector||i.mozMatchesSelector||i.msMatchesSelector||i.oMatchesSelector;e.exports=n},{}],6:[function(t,e,o){function n(t){var e;if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName)t.focus(),t.setSelectionRange(0,t.value.length),e=t.value;else{t.hasAttribute("contenteditable")&&t.focus();var o=window.getSelection(),n=document.createRange();n.selectNodeContents(t),o.removeAllRanges(),o.addRange(n),e=o.toString()}return e}e.exports=n},{}],7:[function(t,e,o){function n(){}n.prototype={on:function(t,e,o){var n=this.e||(this.e={});return(n[t]||(n[t]=[])).push({fn:e,ctx:o}),this},once:function(t,e,o){function n(){i.off(t,n),e.apply(o,arguments)}var i=this;return n._=e,this.on(t,n,o)},emit:function(t){var e=[].slice.call(arguments,1),o=((this.e||(this.e={}))[t]||[]).slice(),n=0,i=o.length;for(n;i>n;n++)o[n].fn.apply(o[n].ctx,e);return this},off:function(t,e){var o=this.e||(this.e={}),n=o[t],i=[];if(n&&e)for(var r=0,s=n.length;s>r;r++)n[r].fn!==e&&n[r].fn._!==e&&i.push(n[r]);return i.length?o[t]=i:delete o[t],this}},e.exports=n},{}],8:[function(e,o,n){!function(i,r){if("function"==typeof t&&t.amd)t(["module","select"],r);else if("undefined"!=typeof n)r(o,e("select"));else{var s={exports:{}};r(s,i.select),i.clipboardAction=s.exports}}(this,function(t,e){"use strict";function o(t){return t&&t.__esModule?t:{"default":t}}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var i=o(e),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},s=function(){function t(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,o,n){return o&&t(e.prototype,o),n&&t(e,n),e}}(),a=function(){function t(e){n(this,t),this.resolveOptions(e),this.initSelection()}return t.prototype.resolveOptions=function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action=t.action,this.emitter=t.emitter,this.target=t.target,this.text=t.text,this.trigger=t.trigger,this.selectedText=""},t.prototype.initSelection=function(){this.text?this.selectFake():this.target&&this.selectTarget()},t.prototype.selectFake=function(){var t=this,e="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandler=document.body.addEventListener("click",function(){return t.removeFake()}),this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="fixed",this.fakeElem.style[e?"right":"left"]="-9999px",this.fakeElem.style.top=(window.pageYOffset||document.documentElement.scrollTop)+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,document.body.appendChild(this.fakeElem),this.selectedText=(0,i["default"])(this.fakeElem),this.copyText()},t.prototype.removeFake=function(){this.fakeHandler&&(document.body.removeEventListener("click"),this.fakeHandler=null),this.fakeElem&&(document.body.removeChild(this.fakeElem),this.fakeElem=null)},t.prototype.selectTarget=function(){this.selectedText=(0,i["default"])(this.target),this.copyText()},t.prototype.copyText=function(){var t=void 0;try{t=document.execCommand(this.action)}catch(e){t=!1}this.handleResult(t)},t.prototype.handleResult=function(t){t?this.emitter.emit("success",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)}):this.emitter.emit("error",{action:this.action,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})},t.prototype.clearSelection=function(){this.target&&this.target.blur(),window.getSelection().removeAllRanges()},t.prototype.destroy=function(){this.removeFake()},s(t,[{key:"action",set:function(){var t=arguments.length<=0||void 0===arguments[0]?"copy":arguments[0];if(this._action=t,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(t){if(void 0!==t){if(!t||"object"!==("undefined"==typeof t?"undefined":r(t))||1!==t.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&t.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(t.hasAttribute("readonly")||t.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=t}},get:function(){return this._target}}]),t}();t.exports=a})},{select:6}],9:[function(e,o,n){!function(i,r){if("function"==typeof t&&t.amd)t(["module","./clipboard-action","tiny-emitter","good-listener"],r);else if("undefined"!=typeof n)r(o,e("./clipboard-action"),e("tiny-emitter"),e("good-listener"));else{var s={exports:{}};r(s,i.clipboardAction,i.tinyEmitter,i.goodListener),i.clipboard=s.exports}}(this,function(t,e,o,n){"use strict";function i(t){return t&&t.__esModule?t:{"default":t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e){var o="data-clipboard-"+t;if(e.hasAttribute(o))return e.getAttribute(o)}var c=i(e),u=i(o),p=i(n),f=function(t){function e(o,n){r(this,e);var i=s(this,t.call(this));return i.resolveOptions(n),i.listenClick(o),i}return a(e,t),e.prototype.resolveOptions=function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText},e.prototype.listenClick=function(t){var e=this;this.listener=(0,p["default"])(t,"click",function(t){return e.onClick(t)})},e.prototype.onClick=function(t){var e=t.delegateTarget||t.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new c["default"]({action:this.action(e),target:this.target(e),text:this.text(e),trigger:e,emitter:this})},e.prototype.defaultAction=function(t){return l("action",t)},e.prototype.defaultTarget=function(t){var e=l("target",t);return e?document.querySelector(e):void 0},e.prototype.defaultText=function(t){return l("text",t)},e.prototype.destroy=function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)},e}(u["default"]);t.exports=f})},{"./clipboard-action":8,"good-listener":4,"tiny-emitter":7}]},{},[9])(9)}),$(".jelect").jelect(),$(".match-height").matchHeight(!1),$(".alert__close").on("click",function(){$(this).parent().fadeOut(300)});var more="Show me more",less="Show me less",isMore=!0;$(".btn-collapse").on("click",function(){$(this).toggleClass("btn-collapse_in").find(".btn-collapse__text").text(isMore?less:more),isMore=!isMore}),$(".btn-collapse-more").on("click",function(){$(this).text(isMore?less:more),isMore=!isMore});var jelect=$(".js-jelect"),current=$(".js-jelect-current");jelect.on("change",function(t){current[0].className="choose-lang-mob__current js-jelect-current choose-lang-mob__current-"+this.value}),$("#full-view").on("click",function(t){t.preventDefault();var e=window.innerWidth>0?window.innerWidth:screen.width,o=e>766?"width=device-width, initial-scale=1.0":"width=1200";$("meta[name=viewport]").attr("content",o)}),$(".dropdown-toggle").on("click",function(t){t.preventDefault()}),$(".trigger").on("click",function(t){t.preventDefault()}),$(function(){$(".trigger").on("click",function(t){if(!$(this).parent().hasClass("active")){var e=$(this).next();e.stop(!0,!0).slideToggle(250),e.parent().toggleClass("open"),t.stopPropagation()}})}),$(window).on("resize",function(){fixCollapse()}),$(".dropdown").on("click",function(t){$(this).hasClass("active")||($(this).find(".menu__dropdown").first().stop(!0,!0).slideToggle(250),$(this).toggleClass("open"))}),$(".modal-login-mob").on("hidden.bs.modal",function(){$(".js-modal-tab-register").removeClass("active"),$(".js-modal-tab-login").addClass("active")});
//# sourceMappingURL=data:application/json;base64,
